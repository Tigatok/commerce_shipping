<?php

/**
 * @file
 * Contains commerce_shipping.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;

/**
 * Implements hook_help().
 */
function commerce_shipping_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the commerce_shipping module.
    case 'help.page.commerce_shipping':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Handles shipping and fulfilment for Drupal Commerce') . '</p>';
      return $output;

    default:
  }
}


/**
 * Adds the default shipment items field to the shipment.
 *
 * Shipment items can't be a base field because the Views integration is broken.
 * Instead, it is created as a configurable field for the shipment.
 *
 */
function commerce_shipping_add_shipment_item_field() {

    //Evan you can probably use this for refernce to some stuff you might need to add for this
    /*$view_display = commerce_get_entity_display('commerce_order', $shipment->id(), 'view');
    $view_display->setComponent('line_items', [
      'type' => 'commerce_line_item_table',
      'weight' => 0,
    ]);
    $view_display->save();

    $form_display = commerce_get_entity_display('commerce_order', $shipment->id(), 'form');
    $form_display->setComponent('line_items', [
      'type' => 'inline_entity_form_complex',
      'weight' => 0,
      'settings' => [
        'override_labels' => TRUE,
        'label_singular' => 'line item',
        'label_plural' => 'line items',
      ],
    ]);
    $form_display->save();*/
  //}
}

